// <auto-generated />
using System;
using Examen.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Examen.Infrastructure.Migrations
{
    [DbContext(typeof(ExamContext))]
    partial class ExamContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EquipeMembre", b =>
                {
                    b.Property<int>("MembreesIdentifiant")
                        .HasColumnType("int");

                    b.Property<int>("equipesEquipeId")
                        .HasColumnType("int");

                    b.HasKey("MembreesIdentifiant", "equipesEquipeId");

                    b.HasIndex("equipesEquipeId");

                    b.ToTable("EquipeMembre");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Contrat", b =>
                {
                    b.Property<int>("EquipeFK")
                        .HasColumnType("int");

                    b.Property<int>("MembreFK")
                        .HasColumnType("int");

                    b.Property<int>("DureeMois")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateContrat")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EquipeId")
                        .HasColumnType("int");

                    b.Property<int?>("MembreIdentifiant")
                        .HasColumnType("int");

                    b.Property<double>("Salaire")
                        .HasColumnType("float");

                    b.Property<int>("equipe")
                        .HasColumnType("int");

                    b.Property<int>("membre")
                        .HasColumnType("int");

                    b.HasKey("EquipeFK", "MembreFK", "DureeMois");

                    b.HasIndex("EquipeId");

                    b.HasIndex("MembreIdentifiant");

                    b.ToTable("contrats");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Equipe", b =>
                {
                    b.Property<int>("EquipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipeId"));

                    b.Property<string>("AdresseLocal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomEquipe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EquipeId");

                    b.ToTable("equipes");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Exemple", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Exemples");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Membre", b =>
                {
                    b.Property<int>("Identifiant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Identifiant"));

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identifiant");

                    b.ToTable("Membrees");

                    b.HasDiscriminator<string>("Type").HasValue("M");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Trophee", b =>
                {
                    b.Property<int>("TropheeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TropheeId"));

                    b.Property<DateTime>("DateTrophee")
                        .HasColumnType("datetime2");

                    b.Property<int>("EquipeFK")
                        .HasColumnType("int");

                    b.Property<double>("Recompense")
                        .HasColumnType("float");

                    b.Property<string>("TypeTropee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TropheeId");

                    b.HasIndex("EquipeFK");

                    b.ToTable("Trophees");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Entraineur", b =>
                {
                    b.HasBaseType("Examen.ApplicationCore.Domain.Membre");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("E");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Joueur", b =>
                {
                    b.HasBaseType("Examen.ApplicationCore.Domain.Membre");

                    b.Property<string>("Poste")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("J");
                });

            modelBuilder.Entity("EquipeMembre", b =>
                {
                    b.HasOne("Examen.ApplicationCore.Domain.Membre", null)
                        .WithMany()
                        .HasForeignKey("MembreesIdentifiant")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Examen.ApplicationCore.Domain.Equipe", null)
                        .WithMany()
                        .HasForeignKey("equipesEquipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Contrat", b =>
                {
                    b.HasOne("Examen.ApplicationCore.Domain.Equipe", null)
                        .WithMany("contrats")
                        .HasForeignKey("EquipeId");

                    b.HasOne("Examen.ApplicationCore.Domain.Membre", null)
                        .WithMany("contrats")
                        .HasForeignKey("MembreIdentifiant");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Trophee", b =>
                {
                    b.HasOne("Examen.ApplicationCore.Domain.Equipe", "Equipe")
                        .WithMany("Trophees")
                        .HasForeignKey("EquipeFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipe");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Equipe", b =>
                {
                    b.Navigation("Trophees");

                    b.Navigation("contrats");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Membre", b =>
                {
                    b.Navigation("contrats");
                });
#pragma warning restore 612, 618
        }
    }
}
